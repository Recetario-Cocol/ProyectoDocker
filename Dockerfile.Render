# Backend Service
FROM openjdk:17-jdk-slim as backend
WORKDIR /app
ARG GITHUB_USERNAME
ARG GITHUB_PAT
RUN apt-get update && \
    apt-get install -y --no-install-recommends git curl && \
    git clone https://${GITHUB_USERNAME}:${GITHUB_PAT}@github.com/latronico96/springboot-jwt-auth.git . && \
    chmod +x ./mvnw && ./mvnw clean package -DskipTests && \
    mv target/auth-api-0.0.1-SNAPSHOT.jar app.jar && \
    curl -o wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh && \
    sed -i 's|#!/bin/bash|#!/bin/sh|' wait-for-it.sh && \
    chmod +x wait-for-it.sh && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Frontend Service
FROM node:18-alpine as frontend
WORKDIR /app
ARG GITHUB_USERNAME
ARG GITHUB_PAT
RUN apk add --no-cache git && \
    git clone https://${GITHUB_USERNAME}:${GITHUB_PAT}@github.com/latronico96/my-app.git . && \
    npm install && npm run build

# Final Stage
FROM nginx:alpine
WORKDIR /app

# Instalar bash en Alpine
RUN apk add --no-cache bash
RUN apk add --no-cache openjdk17


# Copiar el backend
COPY --from=backend /app/app.jar /app/app.jar
COPY --from=backend /app/wait-for-it.sh /app/wait-for-it.sh

# Copiar el frontend
COPY --from=frontend /app/build /usr/share/nginx/html
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Configurar los puertos
EXPOSE 80 8005

# Entrypoint usando bash
ENTRYPOINT ["sh", "-c", "./wait-for-it.sh db:3306 -- java -jar /app/app.jar & exec nginx -g 'daemon off;'"]
