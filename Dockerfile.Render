# Etapa de construcción del frontend
FROM node:18-alpine as frontend-build
WORKDIR /app/frontend
ARG GITHUB_USERNAME
ARG GITHUB_PAT
RUN apk add --no-cache git && \
    git clone https://${GITHUB_USERNAME}:${GITHUB_PAT}@github.com/latronico96/my-app.git . && \
    npm install && npm run build

# Etapa de construcción del backend
FROM openjdk:17-jdk-slim as backend-build
WORKDIR /app/backend
ARG GITHUB_USERNAME
ARG GITHUB_PAT
RUN apt-get update && \
    apt-get install -y --no-install-recommends git && \
    apt-get clean && rm -rf /var/lib/apt/lists/*
RUN git clone https://${GITHUB_USERNAME}:${GITHUB_PAT}@github.com/latronico96/springboot-jwt-auth.git . && \
    chmod +x ./mvnw && ./mvnw clean package -DskipTests && \
    mv target/auth-api-0.0.1-SNAPSHOT.jar app.jar

# Imagen final combinada
FROM nginx:alpine
WORKDIR /app

# Instalar dependencias necesarias
RUN apk add --no-cache bash openjdk17 curl

# Copiar el frontend (build de React)
COPY --from=frontend-build /app/frontend/build /usr/share/nginx/html
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Copiar el backend (Spring Boot JAR)
COPY --from=backend-build /app/backend/app.jar /app/app.jar

# Copiar script de espera para la base de datos
RUN curl -o /app/wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh && \
    chmod +x /app/wait-for-it.sh
RUN mkdir -p /app/logs
RUN chmod -R 777 /app/logs



# Configurar los puertos
EXPOSE 8081 80 8080 8005

# Comando para iniciar ambos servicios
CMD ["/bin/bash", "-c", "/app/wait-for-it.sh db:3306 --timeout=120 --strict -- \
    java -jar /app/app.jar & nginx -g 'daemon off;'"]

